%% MARKOV CHAIN MODEL

function [exp_payoff,exp_payoff_min,exp_payoff_max] = get_expected_payoff_state(state,trans_p)

global exp_payoff_minzoo
global exp_payoff_maxzoo
global exp_payoffs

indx = [state.zoodiff+1,state.minzoo,state.maxzoo,state.c];


if exp_payoffs(indx(1),indx(2),indx(3),indx(4)) ~= -1
    exp_payoff = exp_payoffs(indx(1),indx(2),indx(3),indx(4));
    exp_payoff_min = exp_payoff_minzoo(indx(1),indx(2),indx(3),indx(4));
    exp_payoff_max = exp_payoff_maxzoo(indx(1),indx(2),indx(3),indx(4));
    return;
end

if state.c == 1
    exp_payoff = get_payoffs(state,'minzoo');
    exp_payoff_min = exp_payoff;
    exp_payoff_max = 0;
    exp_payoff_minzoo(indx(1),indx(2),indx(3),indx(4)) = exp_payoff;
    exp_payoff_maxzoo(indx(1),indx(2),indx(3),indx(4)) = 0;
    exp_payoffs(indx(1),indx(2),indx(3),indx(4)) = exp_payoff;
    return;
elseif state.lookahead == 1
    exp_payoff = get_payoffs(state,'minzoo');
    exp_payoff_min = exp_payoff;
    exp_payoff_max = 0;
    exp_payoff_minzoo(indx(1),indx(2),indx(3),indx(4)) = exp_payoff;
    exp_payoff_maxzoo(indx(1),indx(2),indx(3),indx(4)) = 0;
    exp_payoffs(indx(1),indx(2),indx(3),indx(4)) = exp_payoff;
    return;
else
    if state.c > state.lookahead
        state.c = state.lookahead;
    end
    this_payoff = get_payoffs(state,'minzoo');
    [ps_min,states_min] = get_transition_p(state,'minzoo',trans_p);
    [ps_max,states_max] = get_transition_p(state,'maxzoo',trans_p);
    payoffs = [this_payoff + sum([ps_min(1) .* get_expected_payoff_state(states_min{1},trans_p),...
        ps_min(2) .* get_expected_payoff_state(states_min{2},trans_p),...
        ps_min(3) .* get_expected_payoff_state(states_min{3},trans_p),...
        ps_min(4) .* get_expected_payoff_state(states_min{4},trans_p),...
        ps_min(5) .* get_expected_payoff_state(states_min{5},trans_p),...
        ps_min(6) .* get_expected_payoff_state(states_min{6},trans_p),...
        ps_min(7) .* get_expected_payoff_state(states_min{7},trans_p),...
        ps_min(8) .* get_expected_payoff_state(states_min{8},trans_p),...
        ps_min(9) .* get_expected_payoff_state(states_min{9},trans_p),...
        ps_min(10) .* get_expected_payoff_state(states_min{10},trans_p),...
        ps_min(11) .* get_expected_payoff_state(states_min{11},trans_p),...
        ps_min(12) .* get_expected_payoff_state(states_min{12},trans_p),...
        ps_min(13) .* get_expected_payoff_state(states_min{13},trans_p),...
        ps_min(14) .* get_expected_payoff_state(states_min{14},trans_p),...
        ps_min(15) .* get_expected_payoff_state(states_min{15},trans_p),...
        ps_min(16) .* get_expected_payoff_state(states_min{16},trans_p),...
        ps_min(17) .* get_expected_payoff_state(states_min{17},trans_p),...
        ps_min(18) .* get_expected_payoff_state(states_min{18},trans_p)]),...
        sum([ps_max(1) .* get_expected_payoff_state(states_max{1},trans_p),...
        ps_max(2) .* get_expected_payoff_state(states_max{2},trans_p),...
        ps_max(3) .* get_expected_payoff_state(states_max{3},trans_p),...
        ps_max(4) .* get_expected_payoff_state(states_max{4},trans_p),...
        ps_max(5) .* get_expected_payoff_state(states_max{5},trans_p),...
        ps_max(6) .* get_expected_payoff_state(states_max{6},trans_p),...
        ps_max(7) .* get_expected_payoff_state(states_max{7},trans_p),...
        ps_max(8) .* get_expected_payoff_state(states_max{8},trans_p),...
        ps_max(9) .* get_expected_payoff_state(states_max{9},trans_p),...
        ps_max(10) .* get_expected_payoff_state(states_max{10},trans_p),...
        ps_max(11) .* get_expected_payoff_state(states_max{11},trans_p),...
        ps_max(12) .* get_expected_payoff_state(states_max{12},trans_p),...
        ps_max(13) .* get_expected_payoff_state(states_max{13},trans_p),...
        ps_max(14) .* get_expected_payoff_state(states_max{14},trans_p),...
        ps_max(15) .* get_expected_payoff_state(states_max{15},trans_p),...
        ps_max(16) .* get_expected_payoff_state(states_max{16},trans_p),...
        ps_max(17) .* get_expected_payoff_state(states_max{17},trans_p),...
        ps_max(18) .* get_expected_payoff_state(states_max{18},trans_p)])];
    
    % Get payoffs
    [exp_payoff_high,~] = max(payoffs);
    [exp_payoff_low,action_low] = min(payoffs);
    exp_payoff = exp_payoff_high;
    if action_low == 1
        exp_payoff_min = exp_payoff_low;
        exp_payoff_max = exp_payoff_high;
    else
        exp_payoff_min = exp_payoff_high;
        exp_payoff_max = exp_payoff_low;
    end
    
    exp_payoff_minzoo(indx(1),indx(2),indx(3),indx(4)) = exp_payoff_min;
    exp_payoff_maxzoo(indx(1),indx(2),indx(3),indx(4)) = exp_payoff_max;
    exp_payoffs(indx(1),indx(2),indx(3),indx(4)) = exp_payoff;
  
end

end


